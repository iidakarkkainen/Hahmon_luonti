package harkkaprojekti;
import java.io.*;
import java.util.*;

/**
	 *Tämä ohjelma luo ja tallentaa käyttäjän luoman oman hahmon.
	 */
	public class Hahamo {
	    private static final Scanner scanner = new Scanner(System.in);

	    public static void main(String[] args) {
	        try {
	            // Luo uusi hahmoprofiili
	            Character character = luoHahmo();

	            // Tallenna hahmon profiili tiedostoon
	            saveCharacter(character);

	            System.out.println("Hahmon profiili tallennettu onnistuneesti.");
	        } catch (Exception e) {
	            System.out.println("Virhe: " + e.getMessage());
	        }
	    }

	    /**
	     * Luo uuden hahmon käyttäjän syötteen perusteella
	     */
	    private static Character luoHahmo() {
	        System.out.println("Luo uusi hahmo");

	        // Hahmon nimi
	        System.out.print("Nimi: ");
	        String nimi = scanner.nextLine();

	        // Hahmon hiukset
	        String[] hiukset  = {"lyhyt", "pitkä", "kalju"};
	        System.out.println("Hiusten pituus: " + Arrays.toString(hiukset));
	        System.out.print("Hiusten pituus: ");
	        String hiusPituus = scanner.nextLine();
            
        // Hahmon ikä
        System.out.print("Ikä: ");
        int ikä = scanner.nextInt();
        scanner.nextLine();

        // Get the character attributes
        Map<String, Integer> attributes = new HashMap<>();
        String[] attributeNames = {"Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"};
        for (String attributeName : attributeNames) {
            System.out.print(attributeName + ": ");
            int attributeValue = scanner.nextInt();
            scanner.nextLine();
            attributes.put(attributeName, attributeValue);
        }

        // Create a new character object
        Character character = new Character(nimi, hiusPituus, ikä, attributes);
        return character;
    }

    /**
     * Saves the character profile to a file.
     */
    private static void saveCharacter(Character character) throws IOException {
        System.out.println("Saving character profile...");

        // Set the file name to characters.txt
        String fileName = "src/characters.txt";

        // Open the file for writing
        FileWriter writer = new FileWriter(fileName, true);

      // Kirjoittaa tiedot hahmosta erilliselle tiedostolle
        writer.write("Nimi: " + character.haeNimi() + "\n");
        writer.write("Hiukset: " + character.haeHiukset() + "\n");
        writer.write("Ikä: " + character.haeIkä() + "\n");
        for (String attributeName : character.getAttributes().keySet()) {
            writer.write(attributeName + ": " + character.getAttributes().get(attributeName) + "\n");
        }
        writer.write("\n"); // Lisää tyhjän välin jokaisen merkin jälkeen

        // Sulkee tiedoston
        writer.close();
    }

    /**
     * Tämä osio käsittelee hahmon piirteitä
     */
    private static class Character {
        private String nimi;
        private String hiusPituus;
        private int ikä;
        private Map<String, Integer> attributes;

        public Character(String nimi, String hiusPituus, int ikä, Map<String, Integer> attributes) {
            this.nimi = nimi;
            this.hiusPituus = hiusPituus;
            this.ikä = ikä;
            this.attributes = attributes;
        }

        public String haeNimi() {
            return nimi;
        }

        public String haeHiukset() {
            return hiusPituus;
        }

        public int haeIkä() {
            return ikä;
        }

        public Map<String, Integer> getAttributes() {
            return attributes;
        }
    }
}
